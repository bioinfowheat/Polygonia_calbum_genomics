#Prapae annotation
# Once we have a good genome to polish with
# need single indibidula, with > 30X coverage
# be sure to clean PHRED 20 before mapping, but use the datafile that was clone filtered.
# polish this using PILON

mkdir annotation && cd annotation

ln -s /cerberus/projects/shared_napi_rapae/Pieris_rapae_annotation/RNA-seq/*fastq.gz
ln -s /cerberus/projects/shared_napi_rapae/assemblies/Pieris_rapae_fullAsm.fasta* .



read1=
read2=
reference=Pieris_rapae_fullAsm.fasta
#for sample in `ls ./*.ctq20.fq`
#do base=$(basename $sample "1.ctq.fq.ctq20.fq")
#/data/programs/NextGenMap-0.5.0/bin/ngm-0.5.0/ngm -r "$reference" -1 ${base}1.ctq.fq.ctq20.fq -2 ${base}2.ctq.fq.ctq20.fq -t 64 -p -b -o ${base}NGM.bam
#done

# Align RNA seq
# index the genome

hisat2=/data/programs/hisat2-master/

$hisat2/hisat2-build $reference ${genome%.fasta}_Hi2index

for sample in `ls ./*_1.fastq.gz `
do base=$(basename $sample "_1.fastq.gz")
$hisat2/hisat2 -p 40 -x ${reference%.fasta}_Hi2index -S ${base}.sam -q -1 ${base}_1.fastq.gz -2 ${base}_2.fastq.gz
done


# convert to bams and filter out unmapped reads
for i in *sam
do samtools view -bS -F 4 $i > ${i%.sam}.aln.bam
done

for i in *aln.bam
do sambamba sort -t 32 $i
done

# get protein set from old annotation

scp kaltun@miles.zoologi.su.se:/mnt/griffin/Gene_dup_collaboration/full_protein_sets/90_proteins/Prap_BILSv2_proteins.fa.90.fa .
grep -c ">" Prap_BILSv2_proteins.fa.90.fa
15790

# softmask genome using RED

bash redmask.sh Pieris_rapae_fullAsm.fasta Pieris_rapae_fullAsm.softmasked
# Usage: bash redmask.sh <input> <output>
# [Jul 22 02:47 PM] Running Python v2.7.16
# [Jul 22 02:47 PM] Loading assembly:
#     Contigs: 2,772
#     Length:  323,179,347 bp
#     nN50:    11,535,178 bp
# [Jul 22 02:47 PM] Splitting genome assembly into training set (contigs > 1000 bp)
# [Jul 22 02:47 PM] Finding repeats with Red (REpeat Detector)
# [Jul 22 02:55 PM] Collecting results from Red
# [Jul 22 02:55 PM] Summarizing results and converting to BED format

# Masked genome: /cerberus/projects/kaltun/Prap/annotation/Pieris_rapae_fullAsm.softmasked.softmasked.fa
# Repeat BED file: /cerberus/projects/kaltun/Prap/annotation/Pieris_rapae_fullAsm.softmasked.repeats.bed
# Repeat FASTA file: /cerberus/projects/kaltun/Prap/annotation/Pieris_rapae_fullAsm.softmasked.repeats.fasta
# num scaffolds: 2,772
# assembly size: 323,179,347 bp
# masked repeats: 118,710,751 bp (36.73%)



# Run braker2
ls *aln.sorted.bam > bams
genome=Pieris_rapae_fullAsm.softmasked.softmasked.fa
bamfiles=$(tr '\n' ',' < bams)
proteins=Prap_BILSv2_proteins.fa.90.fa
species=Pieris_rapae_fullAsm_23jul20
export PATH=/data/programs/augustus-3.3.1/bin/:/cerberus/projects/kaltun/software/BRAKER/scripts/:/cerberus/projects/kaltun/software/BRAKER/:$PATH
export GENEMARK_PATH=/data/programs/gm_et_linux_64/gmes_petap
export AUGUSTUS_CONFIG_PATH=/data/programs/Augustus-3.3.1/config
export AUGUSTUS_SCRIPTS_PATH=/data/programs/Augustus-3.3.1/scripts
export BAMTOOLS_PATH=/data/programs/bamtools-2.5.1/bin/
export BLAST_PATH=/data/programs/ncbi-blast-2.5.0+/bin
export SAMTOOLS_PATH=/data/programs/samtools-1.10/
# setting the alignment tool
export ALIGNMENT_TOOL_PATH=/data/programs/gth-1.7.0-Linux_x86_64-64bit/bin
# input
# input
braker.pl --species=$species --genome=$genome \
--bam=bamfiles --prot_seq=$proteins \
--prg=gth --gth2traingenes --cores 40 \
--softmasking
